image: docker:stable

options:
  docker: true

pipelines:
  default:
    - step:
        name: 'Run tests'
        image: python:3.8.2
        caches:
          - pip
        script:
          - pip install poetry && poetry config virtualenvs.create false && poetry install
          - FLASK_CONFIG=testing python -m pytest tests/ --ignore=tests/app/http
        services:
          - postgres
    - step:
        name: 'Build & Push to tanos-api-dev'
        image: 'python:3.8.2'
        trigger: manual
        script:
          - export AWS_ACCESS_KEY_ID=$AWS_TEST_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_TEST_SECRET_ACCESS_KEY
          - export AWS_DEFAULT_REGION=$AWS_TEST_REGION
          - pip3 install -U docker boto3
          - python deploy/build.py -e dev
        caches:
          - docker
    - step:
        name: 'Deploy to tanos-api-dev'
        image: 'python:3.8.2'
        trigger: manual
        deployment: test
        script:
          - export AWS_ACCESS_KEY_ID=$AWS_TEST_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_TEST_SECRET_ACCESS_KEY
          - export AWS_DEFAULT_REGION=$AWS_TEST_REGION
          - pip3 install -U boto3
          - curl -o /usr/local/biupdate.pyn/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
          - chmod +x /usr/local/bin/ecs-cli
          - python deploy/update.py -e dev -s api
definitions:
  services:
    postgres:
      image: postgres:11.4
      variables:
        POSTGRES_DB: 'tanos'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: '1234'