"""alter_timezone_all_tables

Revision ID: c020888b3733
Revises: 56dcd0d39bf7
Create Date: 2021-12-02 17:58:02.124345

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


revision = "c020888b3733"
down_revision = "56dcd0d39bf7"
branch_labels = None
depends_on = None


def upgrade():
    op.alter_column(
        "administrative_divisions",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "administrative_divisions",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "app_agree_terms",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "app_agree_terms",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "articles",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "articles",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "banner_images",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "banner_images",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "devices",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "devices",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "interest_houses",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "interest_houses",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "notice_templates",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "notice_templates",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "notifications",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "notifications",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "post_attachments",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "post_attachments",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "posts",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "posts",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "private_sale_avg_prices",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "private_sale_avg_prices",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "private_sale_details",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "private_sale_details",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "private_sales",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "private_sales",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "private_sale_photos",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "private_sale_photos",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "promotions",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "promotions",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "public_sale_avg_prices",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "public_sale_avg_prices",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "public_sale_detail_photos",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "public_sale_detail_photos",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "public_sales",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "public_sales",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "public_sale_photos",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "public_sale_photos",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "receive_push_type_histories",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "receive_push_types",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "recently_views",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "room_photos",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "room_photos",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "survey_results",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "survey_results",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "tickets",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "ticket_usage_results",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "user_analysis",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "user_infos",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "user_infos",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "users",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "users",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )
    op.alter_column(
        "user_profiles",
        "created_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
    )
    op.alter_column(
        "user_profiles",
        "updated_at",
        server_default=sa.text("now()"),
        type_=postgresql.TIMESTAMP(timezone=True),
        onupdate=sa.func.now(),
    )


def downgrade():
    op.alter_column(
        "administrative_divisions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "administrative_divisions",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "app_agree_terms",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "app_agree_terms",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "articles",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "articles",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "banner_images",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "banner_images",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "devices",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "devices",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "interest_houses",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "interest_houses",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "notice_templates",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "notice_templates",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "notifications",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "notifications",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "post_attachments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "post_attachments",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "posts",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "posts",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_avg_prices",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_avg_prices",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_details",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_details",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sales",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sales",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_photos",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "private_sale_photos",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "promotions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "promotions",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_avg_prices",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_avg_prices",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_detail_photos",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_detail_photos",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sales",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sales",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_photos",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "public_sale_photos",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "receive_push_type_histories",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "receive_push_types",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "recently_views",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "room_photos",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "room_photos",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "survey_results",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "survey_results",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "tickets",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "ticket_usage_results",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "user_analysis",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "user_infos",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "user_infos",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "user_profiles",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
    op.alter_column(
        "user_profiles",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
    )
