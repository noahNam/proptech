"""create app_agree_terms table

Revision ID: 88efa8e1b8c5
Revises: 80f2d6eebad0
Create Date: 2021-06-16 10:40:14.915473

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '88efa8e1b8c5'
down_revision = '80f2d6eebad0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_agree_terms',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('private_user_info_yn', sa.Boolean(), nullable=False),
    sa.Column('required_terms_yn', sa.Boolean(), nullable=False),
    sa.Column('receipt_marketing_yn', sa.Boolean(), nullable=False),
    sa.Column('receipt_marketing_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_app_agree_terms_user_id'), 'app_agree_terms', ['user_id'], unique=False)
    op.create_table('device_tokens',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('token', sa.String(length=163), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_profile_imgs')
    op.drop_table('device_endpoints')
    op.drop_table('user_status_logs')
    op.add_column('devices', sa.Column('uuid', sa.String(length=36), nullable=False))
    op.add_column('devices', sa.Column('os', sa.String(length=3), nullable=False))
    op.add_column('devices', sa.Column('is_auth', sa.Boolean(), nullable=False))
    op.add_column('devices', sa.Column('phone_number', sa.String(length=11), nullable=True))
    op.add_column('devices', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('devices', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('devices', 'device_type')
    op.add_column('notifications', sa.Column('token', sa.String(length=163), nullable=False))
    op.add_column('notifications', sa.Column('endpoint', sa.String(length=100), nullable=True))
    op.alter_column('notifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('notifications', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('users', sa.Column('home_owner_type', sa.SmallInteger(), nullable=False))
    op.add_column('users', sa.Column('interested_house_type', sa.SmallInteger(), nullable=False))
    op.add_column('users', sa.Column('is_required_agree_terms', sa.Boolean(), nullable=False))
    op.drop_column('users', 'email')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'birthday')
    op.drop_column('users', 'nickname')
    op.drop_column('users', 'profile_img_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('profile_img_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('nickname', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('birthday', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('gender', sa.VARCHAR(length=1), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=40), autoincrement=False, nullable=False))
    op.drop_column('users', 'is_required_agree_terms')
    op.drop_column('users', 'interested_house_type')
    op.drop_column('users', 'home_owner_type')
    op.alter_column('notifications', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('notifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('notifications', 'endpoint')
    op.drop_column('notifications', 'token')
    op.add_column('devices', sa.Column('device_type', sa.VARCHAR(length=3), autoincrement=False, nullable=False))
    op.alter_column('devices', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('devices', 'updated_at')
    op.drop_column('devices', 'phone_number')
    op.drop_column('devices', 'is_auth')
    op.drop_column('devices', 'os')
    op.drop_column('devices', 'uuid')
    op.create_table('user_status_logs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_status_logs_pkey')
    )
    op.create_table('device_endpoints',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('device_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('endpoint', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], name='device_endpoints_device_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='device_endpoints_pkey')
    )
    op.create_table('user_profile_imgs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('extension', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_profile_imgs_pkey')
    )
    op.drop_table('device_tokens')
    op.drop_index(op.f('ix_app_agree_terms_user_id'), table_name='app_agree_terms')
    op.drop_table('app_agree_terms')
    # ### end Alembic commands ###
